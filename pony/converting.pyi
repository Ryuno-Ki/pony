from typing import Any, Dict, List, NoReturn, Pattern, Tuple, Union
from pony.py23compat import (
    PY2,
    basestring,
    imap,
    iteritems,
    izip,
    unicode,
    xrange
)
from pony.utils import is_ident

class ValidationError(ValueError): ...

def check_ip(s: str) -> str: ...
def check_positive(s: str) -> Union[int, NoReturn]: ...
def check_identifier(s: str) -> Union[str, NoReturn]: ...

isbn_re: Pattern

def isbn10_checksum(digits: str) -> Union[str, NoReturn]: ...
def isbn13_checksum(digits: str) -> Union[str, NoReturn]: ...
def check_isbn(s: str, convert_to: Optional[int] = ...) -> Union[str, NoReturn]: ...
def isbn10_to_isbn13(s: str) -> Union[str, NoReturn]: ...
def isbn13_to_isbn10(s: str) -> Union[str, NoReturn]: ...

email_re: Pattern
rfc2822_email_re: Pattern

def check_email(s: str) -> Union[str, NoReturn]: ...
def check_rfc2822_email(s: str) -> Union[str, NoReturn]: ...

date_str_list: List[str]
date_re_list: List[Pattern]
time_str: str
time_re: Pattern
datetime_re_list: List[Pattern]
month_lists: List[List[str]]
month_dict: Dict[str, int]

def str2date(s: str) -> Union[Date, NoReturn]: ...
def str2time(s: str) -> Union[Time, NoReturn]: ...
def str2datetime(s: str) -> Union[Datetime, NoReturn]: ...
def str2timedelta(s: str) -> Timedelta: ...
def timedelta2str(td: Timedelta) -> str: ...

converters: Dict[str, Tuple]

def str2py(value: str, type: Union[Tuple, str, None]) -> Union[str, NoReturn]: ...
